#!/usr/bin/env node

"use strict";

const commander = require("commander");

const cli = require("../lib/cli");
const { defaultLogger, getLogger } = require("../lib/logger");

defaultLogger.level = "all";
const logger = getLogger("cli");

/**
 * Handles uncaught error: prints error and exits with code 1.
 * @param {*} err
 * @returns {void}
 */
function handleUncaughtError(err) {
  if (err && err.stack) {
    logger.error(`Command failed:\n${err.stack}`);
  } else {
    logger.error(`Command failed:\n${err}`);
  }
  process.exit(1);
}

commander
  .command("init")
  .description("initialize a project")
  .action(() => {
    const cwd = process.cwd();
    cli.init(cwd).catch(handleUncaughtError);
  });

commander
  .command("run <profile> [glob...]")
  .description("run tasks")
  .action((profileName, globs) => {
    const cwd = process.cwd();
    cli.run(cwd, profileName, globs).catch(handleUncaughtError);
  });

commander.parse(process.argv);
